/* tslint:disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * This structure describes the query messages available in the contract.
 */
export type QueryMsg =
  | {
      blacklisted_voters: {
        limit?: number | null;
        start_after?: string | null;
      };
    }
  | {
      total_vamp: {
        time?: Time | null;
      };
    }
  | {
      total_fixed: {
        time?: Time | null;
      };
    }
  | {
      lock_vamp: {
        time?: Time | null;
        token_id: string;
      };
    }
  | {
      lock_info: {
        time?: Time | null;
        token_id: string;
      };
    }
  | {
      config: {};
    }
  | {
      nft_info: {
        token_id: string;
      };
    }
  | {
      all_nft_info: {
        /**
         * unset or false will filter out expired approvals, you must set to true to see them
         */
        include_expired?: boolean | null;
        token_id: string;
      };
    }
  | {
      owner_of: {
        /**
         * unset or false will filter out expired approvals, you must set to true to see them
         */
        include_expired?: boolean | null;
        token_id: string;
      };
    }
  | {
      approval: {
        include_expired?: boolean | null;
        spender: string;
        token_id: string;
      };
    }
  | {
      approvals: {
        include_expired?: boolean | null;
        token_id: string;
      };
    }
  | {
      all_operators: {
        /**
         * unset or false will filter out expired items, you must set to true to see them
         */
        include_expired?: boolean | null;
        limit?: number | null;
        owner: string;
        start_after?: string | null;
      };
    }
  | {
      num_tokens: {};
    }
  | {
      contract_info: {};
    }
  | {
      tokens: {
        limit?: number | null;
        owner: string;
        start_after?: string | null;
      };
    }
  | {
      all_tokens: {
        limit?: number | null;
        start_after?: string | null;
      };
    }
  | {
      minter: {};
    };
export type Time =
  | ("current" | "next" | "last")
  | {
      time: number;
    }
  | {
      period: number;
    };
